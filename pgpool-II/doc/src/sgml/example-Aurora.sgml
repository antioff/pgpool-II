<sect1 id="example-Aurora">
 <title>Aurora Configuration Example</title>

 <para>
  <productname>Amazon Aurora for PostgreSQL
   Compatibility</productname> (Aurora) is a managed service for
  <productname>PostgreSQL</productname>. From user's point of
  view, <productname>Aurora</productname> can be regarded as a
  streaming replication cluster with some exceptions. First,
  fail over and online recovery are managed
  by <productname>Aurora</productname>. So you don't need to
  set <xref linkend="guc-failover-command">, <xref linkend="guc-follow-master-command">,
    and recovery related parameters. In this section we explain
    how to set up <productname>Pgpool-II</productname> for Aurora.
 </para>

 <sect2 id="example-Aurora-config">
  <title>Setting pgpool.conf for Aurora</title>
  <para>
   <itemizedlist>
    <listitem>
     <para>
      Create <filename>pgpool.conf</filename>
      from <filename>pgpool.conf.sample-stream</filename>.
     </para>
    </listitem>
    <listitem>
     <para>
      Set <xref linkend="guc-sr-check-period"> to 0 to
       disable streaming replication delay checking.  This
       is because <productname>Aurora</productname> does
       not provide neccessary functions to check the
       replication delay.
     </para>
    </listitem>
    <listitem>
     <para>
      Enable <xref linkend="guc-enable-pool-hba"> to on so
       that md5 authentication is enabled
       (<productname>Aurora</productname> always use md5
       authentication).
     </para>
    </listitem>
    <listitem>
     <para>
      Create <filename>pool_password</filename>. See <xref linkend="auth-md5">
       for more details.
     </para>
    </listitem>
    <listitem>
     <para>
      Set <xref linkend="guc-backend-hostname">0 for the
       Aurora writer node.  Set
       other <xref linkend="guc-backend-hostname"> for the
	Aurora reader node.  Set
	appropreate <xref linkend="guc-backend-weight"> as
	 usual. You don't need to
	 set <xref linkend="guc-backend-data-directory">
     </para>
    </listitem>
    <listitem>
     <para>
      Set <varname>ALWAYS_MASTER</varname> flag to
      the <xref linkend="guc-backend-flag">
       for <xref linkend="guc-backend-hostname">0.
     </para>
    </listitem>
    <listitem>
     <para>
      Enable health checking.
      Set <xref linkend="guc-health-check-period"> to 5.
       Set <xref linkend="guc-health-check-user">, <xref linkend="guc-health-check-password">,
	 <xref linkend="guc-health-check-user"> and
	  <xref linkend="guc-health-check-database"> to appropriate values.
	   Enable health check retry.
	   <productname>Aurora</productname> shutdowns all DB nodes while switching
	   over or failover. If the retry is not performed,
	   <productname>Pgpool-II</productname> thinks that all DB nodes are in down status
	   so that it is required to restart <productname>Pgpool-II</productname>.
	   Set <xref linkend="guc-health-check-max-retries"> to 20.
	    Set <xref linkend="guc-health-check-retry-delay"> to 1 to avoid the problem.
     </para>
    </listitem>
    <listitem>
     <para>
      Disable <xref linkend="guc-failover-on-backend-error">
       to avoid failover when connecting to the backend or
       detecting errors on backend side while executing
       queries for the same reasons above.
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>
</sect1>
