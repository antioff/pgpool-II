/*-------------------------------------------------------------------------
 *
 * kwlist_d.h
 *    List of keywords represented as a ScanKeywordList.
 *
 * Portions Copyright (c) 2003-2019, PgPool Global Development Group
 * Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 * NOTES
 *  ******************************
 *  *** DO NOT EDIT THIS FILE! ***
 *  ******************************
 *
 *  It has been GENERATED by src/tools/gen_keywordlist.pl
 *
 *-------------------------------------------------------------------------
 */

#ifndef KWLIST_D_H
#define KWLIST_D_H

#include "kwlookup.h"

static const char ScanKeywords_kw_string[] =
	"abort\0"
	"absolute\0"
	"access\0"
	"action\0"
	"add\0"
	"admin\0"
	"after\0"
	"aggregate\0"
	"all\0"
	"also\0"
	"alter\0"
	"always\0"
	"analyse\0"
	"analyze\0"
	"and\0"
	"any\0"
	"array\0"
	"as\0"
	"asc\0"
	"assertion\0"
	"assignment\0"
	"asymmetric\0"
	"at\0"
	"attach\0"
	"attribute\0"
	"authorization\0"
	"backward\0"
	"before\0"
	"begin\0"
	"between\0"
	"bigint\0"
	"binary\0"
	"bit\0"
	"boolean\0"
	"both\0"
	"by\0"
	"cache\0"
	"call\0"
	"called\0"
	"cascade\0"
	"cascaded\0"
	"case\0"
	"cast\0"
	"catalog\0"
	"chain\0"
	"char\0"
	"character\0"
	"characteristics\0"
	"check\0"
	"checkpoint\0"
	"class\0"
	"close\0"
	"cluster\0"
	"coalesce\0"
	"collate\0"
	"collation\0"
	"column\0"
	"columns\0"
	"comment\0"
	"comments\0"
	"commit\0"
	"committed\0"
	"concurrently\0"
	"configuration\0"
	"conflict\0"
	"connection\0"
	"constraint\0"
	"constraints\0"
	"content\0"
	"continue\0"
	"conversion\0"
	"copy\0"
	"cost\0"
	"create\0"
	"cross\0"
	"csv\0"
	"cube\0"
	"current\0"
	"current_catalog\0"
	"current_date\0"
	"current_role\0"
	"current_schema\0"
	"current_time\0"
	"current_timestamp\0"
	"current_user\0"
	"cursor\0"
	"cycle\0"
	"data\0"
	"database\0"
	"day\0"
	"deallocate\0"
	"dec\0"
	"decimal\0"
	"declare\0"
	"default\0"
	"defaults\0"
	"deferrable\0"
	"deferred\0"
	"definer\0"
	"delete\0"
	"delimiter\0"
	"delimiters\0"
	"depends\0"
	"desc\0"
	"detach\0"
	"dictionary\0"
	"disable\0"
	"discard\0"
	"distinct\0"
	"do\0"
	"document\0"
	"domain\0"
	"double\0"
	"drop\0"
	"each\0"
	"else\0"
	"enable\0"
	"encoding\0"
	"encrypted\0"
	"end\0"
	"enum\0"
	"escape\0"
	"event\0"
	"except\0"
	"exclude\0"
	"excluding\0"
	"exclusive\0"
	"execute\0"
	"exists\0"
	"explain\0"
	"extension\0"
	"external\0"
	"extract\0"
	"false\0"
	"family\0"
	"fetch\0"
	"filter\0"
	"first\0"
	"float\0"
	"following\0"
	"for\0"
	"force\0"
	"foreign\0"
	"forward\0"
	"freeze\0"
	"from\0"
	"full\0"
	"function\0"
	"functions\0"
	"generated\0"
	"global\0"
	"grant\0"
	"granted\0"
	"greatest\0"
	"group\0"
	"grouping\0"
	"groups\0"
	"handler\0"
	"having\0"
	"header\0"
	"hold\0"
	"hour\0"
	"identity\0"
	"if\0"
	"ilike\0"
	"immediate\0"
	"immutable\0"
	"implicit\0"
	"import\0"
	"in\0"
	"include\0"
	"including\0"
	"increment\0"
	"index\0"
	"indexes\0"
	"inherit\0"
	"inherits\0"
	"initially\0"
	"inline\0"
	"inner\0"
	"inout\0"
	"input\0"
	"insensitive\0"
	"insert\0"
	"instead\0"
	"int\0"
	"integer\0"
	"intersect\0"
	"interval\0"
	"into\0"
	"invoker\0"
	"is\0"
	"isnull\0"
	"isolation\0"
	"join\0"
	"key\0"
	"label\0"
	"language\0"
	"large\0"
	"last\0"
	"lateral\0"
	"leading\0"
	"leakproof\0"
	"least\0"
	"left\0"
	"level\0"
	"like\0"
	"limit\0"
	"listen\0"
	"load\0"
	"local\0"
	"localtime\0"
	"localtimestamp\0"
	"location\0"
	"lock\0"
	"locked\0"
	"logged\0"
	"mapping\0"
	"match\0"
	"materialized\0"
	"maxvalue\0"
	"method\0"
	"minute\0"
	"minvalue\0"
	"mode\0"
	"month\0"
	"move\0"
	"name\0"
	"names\0"
	"national\0"
	"natural\0"
	"nchar\0"
	"new\0"
	"next\0"
	"no\0"
	"none\0"
	"not\0"
	"nothing\0"
	"notify\0"
	"notnull\0"
	"nowait\0"
	"null\0"
	"nullif\0"
	"nulls\0"
	"numeric\0"
	"object\0"
	"of\0"
	"off\0"
	"offset\0"
	"oids\0"
	"old\0"
	"on\0"
	"only\0"
	"operator\0"
	"option\0"
	"options\0"
	"or\0"
	"order\0"
	"ordinality\0"
	"others\0"
	"out\0"
	"outer\0"
	"over\0"
	"overlaps\0"
	"overlay\0"
	"overriding\0"
	"owned\0"
	"owner\0"
	"parallel\0"
	"parser\0"
	"partial\0"
	"partition\0"
	"passing\0"
	"password\0"
	"pgpool\0"
	"placing\0"
	"plans\0"
	"policy\0"
	"position\0"
	"preceding\0"
	"precision\0"
	"prepare\0"
	"prepared\0"
	"preserve\0"
	"primary\0"
	"prior\0"
	"privileges\0"
	"procedural\0"
	"procedure\0"
	"procedures\0"
	"program\0"
	"publication\0"
	"quote\0"
	"range\0"
	"read\0"
	"real\0"
	"reassign\0"
	"recheck\0"
	"recursive\0"
	"ref\0"
	"references\0"
	"referencing\0"
	"refresh\0"
	"reindex\0"
	"relative\0"
	"release\0"
	"rename\0"
	"repeatable\0"
	"replace\0"
	"replica\0"
	"reset\0"
	"restart\0"
	"restrict\0"
	"returning\0"
	"returns\0"
	"revoke\0"
	"right\0"
	"role\0"
	"rollback\0"
	"rollup\0"
	"routine\0"
	"routines\0"
	"row\0"
	"rows\0"
	"rule\0"
	"savepoint\0"
	"schema\0"
	"schemas\0"
	"scroll\0"
	"search\0"
	"second\0"
	"security\0"
	"select\0"
	"sequence\0"
	"sequences\0"
	"serializable\0"
	"server\0"
	"session\0"
	"session_user\0"
	"set\0"
	"setof\0"
	"sets\0"
	"share\0"
	"show\0"
	"similar\0"
	"simple\0"
	"skip\0"
	"smallint\0"
	"snapshot\0"
	"some\0"
	"sql\0"
	"stable\0"
	"standalone\0"
	"start\0"
	"statement\0"
	"statistics\0"
	"stdin\0"
	"stdout\0"
	"storage\0"
	"stored\0"
	"strict\0"
	"strip\0"
	"subscription\0"
	"substring\0"
	"support\0"
	"symmetric\0"
	"sysid\0"
	"system\0"
	"table\0"
	"tables\0"
	"tablesample\0"
	"tablespace\0"
	"temp\0"
	"template\0"
	"temporary\0"
	"text\0"
	"then\0"
	"ties\0"
	"time\0"
	"timestamp\0"
	"to\0"
	"trailing\0"
	"transaction\0"
	"transform\0"
	"treat\0"
	"trigger\0"
	"trim\0"
	"true\0"
	"truncate\0"
	"trusted\0"
	"type\0"
	"types\0"
	"unbounded\0"
	"uncommitted\0"
	"unencrypted\0"
	"union\0"
	"unique\0"
	"unknown\0"
	"unlisten\0"
	"unlogged\0"
	"until\0"
	"update\0"
	"user\0"
	"using\0"
	"vacuum\0"
	"valid\0"
	"validate\0"
	"validator\0"
	"value\0"
	"values\0"
	"varchar\0"
	"variadic\0"
	"varying\0"
	"verbose\0"
	"version\0"
	"view\0"
	"views\0"
	"volatile\0"
	"when\0"
	"where\0"
	"whitespace\0"
	"window\0"
	"with\0"
	"within\0"
	"without\0"
	"work\0"
	"wrapper\0"
	"write\0"
	"xml\0"
	"xmlattributes\0"
	"xmlconcat\0"
	"xmlelement\0"
	"xmlexists\0"
	"xmlforest\0"
	"xmlnamespaces\0"
	"xmlparse\0"
	"xmlpi\0"
	"xmlroot\0"
	"xmlserialize\0"
	"xmltable\0"
	"year\0"
	"yes\0"
	"zone";

static const uint16 ScanKeywords_kw_offsets[] = {
	0,
	6,
	15,
	22,
	29,
	33,
	39,
	45,
	55,
	59,
	64,
	70,
	77,
	85,
	93,
	97,
	101,
	107,
	110,
	114,
	124,
	135,
	146,
	149,
	156,
	166,
	180,
	189,
	196,
	202,
	210,
	217,
	224,
	228,
	236,
	241,
	244,
	250,
	255,
	262,
	270,
	279,
	284,
	289,
	297,
	303,
	308,
	318,
	334,
	340,
	351,
	357,
	363,
	371,
	380,
	388,
	398,
	405,
	413,
	421,
	430,
	437,
	447,
	460,
	474,
	483,
	494,
	505,
	517,
	525,
	534,
	545,
	550,
	555,
	562,
	568,
	572,
	577,
	585,
	601,
	614,
	627,
	642,
	655,
	673,
	686,
	693,
	699,
	704,
	713,
	717,
	728,
	732,
	740,
	748,
	756,
	765,
	776,
	785,
	793,
	800,
	810,
	821,
	829,
	834,
	841,
	852,
	860,
	868,
	877,
	880,
	889,
	896,
	903,
	908,
	913,
	918,
	925,
	934,
	944,
	948,
	953,
	960,
	966,
	973,
	981,
	991,
	1001,
	1009,
	1016,
	1024,
	1034,
	1043,
	1051,
	1057,
	1064,
	1070,
	1077,
	1083,
	1089,
	1099,
	1103,
	1109,
	1117,
	1125,
	1132,
	1137,
	1142,
	1151,
	1161,
	1171,
	1178,
	1184,
	1192,
	1201,
	1207,
	1216,
	1223,
	1231,
	1238,
	1245,
	1250,
	1255,
	1264,
	1267,
	1273,
	1283,
	1293,
	1302,
	1309,
	1312,
	1320,
	1330,
	1340,
	1346,
	1354,
	1362,
	1371,
	1381,
	1388,
	1394,
	1400,
	1406,
	1418,
	1425,
	1433,
	1437,
	1445,
	1455,
	1464,
	1469,
	1477,
	1480,
	1487,
	1497,
	1502,
	1506,
	1512,
	1521,
	1527,
	1532,
	1540,
	1548,
	1558,
	1564,
	1569,
	1575,
	1580,
	1586,
	1593,
	1598,
	1604,
	1614,
	1629,
	1638,
	1643,
	1650,
	1657,
	1665,
	1671,
	1684,
	1693,
	1700,
	1707,
	1716,
	1721,
	1727,
	1732,
	1737,
	1743,
	1752,
	1760,
	1766,
	1770,
	1775,
	1778,
	1783,
	1787,
	1795,
	1802,
	1810,
	1817,
	1822,
	1829,
	1835,
	1843,
	1850,
	1853,
	1857,
	1864,
	1869,
	1873,
	1876,
	1881,
	1890,
	1897,
	1905,
	1908,
	1914,
	1925,
	1932,
	1936,
	1942,
	1947,
	1956,
	1964,
	1975,
	1981,
	1987,
	1996,
	2003,
	2011,
	2021,
	2029,
	2038,
	2045,
	2053,
	2059,
	2066,
	2075,
	2085,
	2095,
	2103,
	2112,
	2121,
	2129,
	2135,
	2146,
	2157,
	2167,
	2178,
	2186,
	2198,
	2204,
	2210,
	2215,
	2220,
	2229,
	2237,
	2247,
	2251,
	2262,
	2274,
	2282,
	2290,
	2299,
	2307,
	2314,
	2325,
	2333,
	2341,
	2347,
	2355,
	2364,
	2374,
	2382,
	2389,
	2395,
	2400,
	2409,
	2416,
	2424,
	2433,
	2437,
	2442,
	2447,
	2457,
	2464,
	2472,
	2479,
	2486,
	2493,
	2502,
	2509,
	2518,
	2528,
	2541,
	2548,
	2556,
	2569,
	2573,
	2579,
	2584,
	2590,
	2595,
	2603,
	2610,
	2615,
	2624,
	2633,
	2638,
	2642,
	2649,
	2660,
	2666,
	2676,
	2687,
	2693,
	2700,
	2708,
	2715,
	2722,
	2728,
	2741,
	2751,
	2759,
	2769,
	2775,
	2782,
	2788,
	2795,
	2807,
	2818,
	2823,
	2832,
	2842,
	2847,
	2852,
	2857,
	2862,
	2872,
	2875,
	2884,
	2896,
	2906,
	2912,
	2920,
	2925,
	2930,
	2939,
	2947,
	2952,
	2958,
	2968,
	2980,
	2992,
	2998,
	3005,
	3013,
	3022,
	3031,
	3037,
	3044,
	3049,
	3055,
	3062,
	3068,
	3077,
	3087,
	3093,
	3100,
	3108,
	3117,
	3125,
	3133,
	3141,
	3146,
	3152,
	3161,
	3166,
	3172,
	3183,
	3190,
	3195,
	3202,
	3210,
	3215,
	3223,
	3229,
	3233,
	3247,
	3257,
	3268,
	3278,
	3288,
	3302,
	3311,
	3317,
	3325,
	3338,
	3347,
	3352,
	3356,
};

#define SCANKEYWORDS_NUM_KEYWORDS 443

static int
ScanKeywords_hash_func(const void *key, size_t keylen)
{
	static const int16 h[887] = {
		    39,      0,    254,    436,  32767,  32767,  32767,      0,
		 32767,    253,  32767,     51,  32767,  32767,  32767,   -488,
		 32767,    269,   -252,    457,  32767,  32767,  32767,    133,
		  -265,      3,  32767,    -46,  32767,     -4,  32767,  32767,
		   156,     11,   -212,  32767,    408,    128,    -77,    413,
		    31,    401,  32767,    287,   -119,    118,  32767,    429,
		     0,  32767,    632,     77,    223,    413,  32767,    320,
		   264,    246,      0,      7,    142,   -109,    368,  32767,
		   259,    134,  32767,   -284,      4,   -231,    391,   -233,
		   -88,     27,   -128,  32767,      0,      0,  32767,   -256,
		   503,  32767,  32767,    418,      0,  32767,  32767,     66,
		     0,    272,   -250,    131,      0,    112,  32767,    555,
		   111,      0,    509,  32767,  32767,   -154,      0,  32767,
		    29,    195,  32767,  32767,  32767,    173,     88,      0,
		   554,    189,    502,    -56,    400,    -33,  32767,  32767,
		    90,  32767,  32767,  32767,   -247,    332,      0,  32767,
		   241,    347,    432,    338,      0,    159,    -55,  32767,
		     0,    104,   -225,    300,    484,  32767,      0,    107,
		 32767,   -223,    298,      0,   -105,  32767,  32767,    211,
		  -269,   -251,   -157,    439,  32767,  32767,    507,    380,
		 32767,    103,  32767,    117,    423,    400,    357,   -263,
		 32767,    154,     64,  32767,  32767,  32767,     66,    104,
		   261,    741,   -185,    502,    -80,    209,    256,  32767,
		 32767,     20,      0,      0,    342,  32767,    171,  32767,
		 32767,   -149,  32767,  32767,  32767,  32767,      9,  32767,
		   167,      0,  32767,   -369,   -239,   -326,    116,   -287,
		    73,  32767,  32767,    279,    206,    192,    310,  32767,
		     0,  32767,  32767,  32767,      0,    -20,    411,      0,
		 32767,  32767,     75,    135,  32767,     36,  32767,    136,
		     0,  32767,     58,      0,  32767,  32767,    392,      0,
		 32767,     86,    385,    360,  32767,    292,     45,    -76,
		 32767,     42,  32767,  32767,  32767,   -145,      0,      0,
		 32767,  32767,  32767,  32767,      0,  32767,    187,    369,
		 32767,  32767,      0,  32767,  32767,  32767,    222,  32767,
		  -277,    386,  32767,    145,    427,    -88,     19,    742,
		 32767,     13,    128,   -353,      0,   -320,  32767,  32767,
		   149,    412,  32767,  32767,    276,    285,    131,      0,
		   129,    351,  32767,  32767,    204,  32767,  32767,      0,
		 32767,  32767,  32767,    225,    132,  32767,     71,  32767,
		  -232,    162,    115,  32767,   -196,     40,  32767,  32767,
		   128,      0,   -208,  32767,  32767,    112,  32767,  32767,
		  -199,  32767,    424,  32767,    265,    -30,   -388,   -267,
		   332,    414,    319,  32767,     84,   -319,  32767,   -142,
		   147,  32767,  32767,  32767,     39,  32767,  32767,      0,
		   146,    -59,    226,  32767,      0,  32767,    244,    110,
		   -68,      0,    506,    139,  32767,    131,     90,    313,
		  -300,  32767,      0,     65,    131,    427,  32767,  32767,
		   243,    444,      0,  32767,    104,    146,   -294,      0,
		   273,  32767,  32767,    204,     97,      0,  32767,    -55,
		 32767,  32767,     47,    100,     46,    161,     72,  32767,
		 32767,     71,  32767,     13,      0,  32767,     43,      0,
		   389,  32767,      0,     60,  32767,  32767,    563,  32767,
		   264,      0,  32767,    239,      0,  32767,  32767,  32767,
		   433,      0,    260,      9,  32767,  32767,  32767,    462,
		     0,    161,      0,      0,     10,  32767,    152,  32767,
		 32767,    341,    321,  32767,  32767,      0,   -174,  32767,
		  -235,  32767,     -6,    660,  32767,  32767,    246,    231,
		     0,  32767,  32767,    140,      0,   -485,    102,  32767,
		     0,   -420,  32767,      0,  32767,  32767,  32767,    217,
		    83,    274,  32767,      0,    162,    133,    157,      0,
		  -300,     91,    304,  32767,  32767,      0,  32767,     76,
		   291,  32767,    -80,   -320,      0,  32767,   -180,  32767,
		 32767,    544,    267,     55,    262,     93,    332,  32767,
		   520,   -305,  32767,  32767,    201,  32767,      0,   -121,
		 32767,  32767,  32767,  32767,  32767,      0,   -331,      0,
		 32767,   -244,    315,  32767,    175,  32767,   -218,      0,
		   -87,   -124,      0,    413,    200,    272,    307,    507,
		 32767,      0,  32767,    430,    274,  32767,  32767,    236,
		     0,    254,  32767,  32767,  32767,      0,    109,    -72,
		 32767,  32767,    244,  32767,      0,  32767,    204,  32767,
		 32767,     33,    392,   -411,    168,      0,    434,  32767,
		 32767,      0,  32767,  32767,     38,    235,  32767,      0,
		  -159,    314,     49,      0,  32767,  32767,  32767,  32767,
		 32767,    150,  32767,  32767,    -10,      0,    -36,    553,
		 32767,      0,  32767,    297,     14,    115,    409,    127,
		 32767,  32767,  32767,  32767,  32767,  32767,  32767,  32767,
		 32767,      0,    458,    618,  32767,    352,      0,  32767,
		   413,  32767,  32767,    262,  32767,      4,   -304,      0,
		   401,      0,    104,   -193,    316,      8,   -397,    294,
		   -80,  32767,    370,      0,    228,    133,      0,      4,
		 32767,      0,    220,   -137,    121,  32767,      0,  32767,
		   269,  32767,    139,   -202,    185,  32767,     22,     61,
		    50,      9,  32767,     76,   -219,     25,  32767,    462,
		     0,  32767,  32767,  32767,    944,    143,    -38,     93,
		   416,  32767,     70,     35,  32767,    382,  32767,      0,
		 32767,  32767,   -312,    383,  32767,    386,  32767,  32767,
		   153,      0,   -224,  32767,     41,      0,    151,  32767,
		   163,    107,      0,  32767,  32767,    144,  32767,  32767,
		   169,    350,  32767,      0,  32767,     59,  32767,  32767,
		   383,     97,    138,    442,      0,  32767,  32767,    289,
		     0,  32767,  32767,  32767,  32767,  32767,    274,    369,
		 32767,    640,    765,  32767,  32767,    276,     87,    371,
		 32767,  32767,    -89,    309,    -27,      0,  32767,  32767,
		     0,  32767,   -106,    -17,    402,   -264,  32767,      0,
		   302,    340,  32767,     62,    406,      0,   -499,  32767,
		   147,  32767,      0,  32767,      0,  32767,    524,  32767,
		 32767,    221,      0,     39,    267,  32767,  32767,      2,
		   268,  32767,      0,  32767,      0,    440,      0,  32767,
		    25,   -231,     23,    429,      0,    335,  32767,  32767,
		  -199,    265,  32767,    172,  32767,      0,  32767,    296,
		  -320,    379,  32767,    227,      0,  32767,    297,  32767,
		 32767,    489,      0,  32767,      0,    -97,      0,    384,
		 32767,  32767,    311,    307,  32767,    137,  32767,    206,
		     0,    220,   -184,      0,  32767,  32767,  32767,  32767,
		   612,      0,    247,    537,    233,  32767,    316,    182,
		     0,  32767,      0,    404,  32767,  32767,      0,  32767,
		 32767,  32767,     52,    581,    380,  32767,  32767,    383,
		 32767,  32767,     42,    240,     11,  32767,  32767,      0,
		  -514,      0,   -214,      0,     53,      0,   -145,  32767,
		    76,     91,  32767,  32767,    232,      8,      0,      0,
		     0,     57,    182,  32767,      0,  32767,      0,
	};

	const unsigned char *k = (const unsigned char *) key;
	uint32		a = 0;
	uint32		b = 1;

	while (keylen--)
	{
		unsigned char c = *k++ | 0x20;

		a = a * 31 + c;
		b = b * 127 + c;
	}
	return h[a % 887] + h[b % 887];
}

const ScanKeywordList ScanKeywords = {
	ScanKeywords_kw_string,
	ScanKeywords_kw_offsets,
	ScanKeywords_hash_func,
	SCANKEYWORDS_NUM_KEYWORDS,
	17
};

#endif							/* KWLIST_D_H */
