From 3b3809c0facbb7a32f0208ac2d7d68bea8653eef Mon Sep 17 00:00:00 2001
From: Konstantin Pavlov <thresh@altlinux.org>
Date: Mon, 20 Sep 2010 15:48:59 +0400
Subject: [PATCH 1/3] Fix EINTR for all cases in health check.

---
 pgpool-II/main.c |   37 ++++++++++++++++++++++++++++++++++---
 1 files changed, 34 insertions(+), 3 deletions(-)

diff --git a/pgpool-II/main.c b/pgpool-II/main.c
index e1e94c1..57ca1c9 100644
--- a/pgpool-II/main.c
+++ b/pgpool-II/main.c
@@ -1506,6 +1506,7 @@ int health_check(void)
 {
 	int fd;
 	int sts;
+	int wr;
 	static bool is_first = true;
 	static char *dbname;
 
@@ -1551,7 +1552,7 @@ int health_check(void)
 		else
 			fd = connect_inet_domain_socket(i, FALSE);
 
-		if (fd < 0)
+		if (fd < 0 && errno != EINTR)
 		{
 			pool_error("health check failed. %d th host %s at port %d is down",
 					   i,
@@ -1560,8 +1561,18 @@ int health_check(void)
 
 			return i+1;
 		}
+		else if ( fd < 0 && errno == EINTR )
+		{
+			pool_error("connect() failed. restarting health check for host %s at port %d. reason: %s",
+					BACKEND_INFO(i).backend_hostname,
+					BACKEND_INFO(i).backend_port,
+					strerror(errno));
+			errno = 0;
+			continue;
+		}
 
-		if (write(fd, &mysp, sizeof(mysp)) < 0)
+		wr = write(fd, &mysp, sizeof(mysp));
+		if ( wr < 0 && errno != EINTR)
 		{
 			pool_error("health check failed during write. host %s at port %d is down. reason: %s",
 					   BACKEND_INFO(i).backend_hostname,
@@ -1570,13 +1581,23 @@ int health_check(void)
 			close(fd);
 			return i+1;
 		}
+		else if (wr < 0 && errno == EINTR)
+		{
+			pool_error("write() failed. restarting health check for host %s at port %d. reason: %s",
+					BACKEND_INFO(i).backend_hostname,
+					BACKEND_INFO(i).backend_port,
+					strerror(errno));
+			errno = 0;
+			close(fd);
+			continue;
+		}
 
 		/*
 		 * Don't bother to be blocked by read(2). It will be
 		 * interrupted by ALRAM anyway.
 		 */
 		sts = read(fd, &kind, 1);
-		if (sts == -1)
+		if (sts == -1 && errno != EINTR)
 		{
 			pool_error("health check failed during read. host %s at port %d is down. reason: %s",
 					   BACKEND_INFO(i).backend_hostname,
@@ -1593,6 +1614,16 @@ int health_check(void)
 			close(fd);
 			return i+1;
 		}
+		else if (sts == -1 && errno == EINTR)
+		{
+			pool_error("read() failed. restarting health check for host %s at port %d. reason: %s",
+					    BACKEND_INFO(i).backend_hostname,
+					    BACKEND_INFO(i).backend_port,
+					    strerror(errno));
+			errno = 0;
+			close(fd);
+			continue;
+		}
 
 		if (is_first)
 			is_first = false;
-- 
1.7.0.6

